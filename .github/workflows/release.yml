name: Build and Create Release

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version:
        description: "Release version (e.g. v0.1 or v1.0)"
        required: true
        default: "v0.1"

jobs:
  build:
    name: Build binaries
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest]
        buildType: [normal, garble]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.20"

      - name: Install dependencies
        run: go mod tidy

      - name: Build binary
        env:
          BUILD_TYPE: ${{ matrix.buildType }}
        run: |
          # Determine file extension based on OS.
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            ext=".exe"
          else
            ext=""
          fi
          echo "Building $BUILD_TYPE binary for ${{ matrix.os }}..."
          if [ "$BUILD_TYPE" = "garble" ]; then
            go install mvdan.cc/garble@latest
            garble build -o goenumer-${{ matrix.os }}-${{ matrix.buildType }}${ext} ./cmd/...
          else
            go build -o goenumer-${{ matrix.os }}-${{ matrix.buildType }}${ext} ./cmd/...
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: goenumer-${{ matrix.os }}-${{ matrix.buildType }}
          path: goenumer-${{ matrix.os }}-${{ matrix.buildType }}${{ matrix.os == 'windows-latest' && '.exe' || '' }}

  release:
    name: Create GitHub Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Zip artifacts
        run: zip -r release-artifacts.zip artifacts

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.version }}
          release_name: ${{ github.event.inputs.version }}
          draft: false
          prerelease: ${{ startsWith(github.event.inputs.version, 'v0.') }}

      - name: Upload Release Asset - Zip Package
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: release-artifacts.zip
          asset_name: release-artifacts.zip
          asset_content_type: application/zip

      - name: Upload Release Asset - Raw Binary (Windows Normal)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/goenumer-windows-latest-normal.exe
          asset_name: goenumer-windows-latest-normal.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - Raw Binary (Windows Garble)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/goenumer-windows-latest-garble.exe
          asset_name: goenumer-windows-latest-garble.exe
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - Raw Binary (Linux Normal)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/goenumer-linux-latest-normal
          asset_name: goenumer-linux-latest-normal
          asset_content_type: application/octet-stream

      - name: Upload Release Asset - Raw Binary (Linux Garble)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: artifacts/goenumer-linux-latest-garble
          asset_name: goenumer-linux-latest-garble
          asset_content_type: application/octet-stream
